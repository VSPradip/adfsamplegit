{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "svdnordenor"
		},
		"AzureCosmosDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureCosmosDB'"
		},
		"AzureCosmosSink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureCosmosSink'"
		},
		"AzureSQLOrder_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQLOrder'"
		},
		"AzureSqlDbSales_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDbSales'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQL Norm to NoSQL DeNorm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moving a Normalized data in SQL (3NF) to Comos in a Denormalized Fashion",
				"activities": [
					{
						"name": "Sql to Cosmos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "sqltocosmos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceOrderDetail": {},
									"SourceOrderHeader": {},
									"TargetCosmos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/sqltocosmos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLOrDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLOrder",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLOrHeader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLOrder",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureCosmosSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "ordsample"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureCosmosSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cosmosdenormsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureCosmosDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "ordsample"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureCosmosDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Cosmos DB as Sink",
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('AzureCosmosDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureCosmosSink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Cosmos DB as Sink",
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('AzureCosmosSink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLOrder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure SQL DB Source Order Connector",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQLOrder_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDbSales')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SalesOrderDetail & SalesOrderHeader ",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDbSales_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqltocosmos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "from a normalized SQL structure to denormalized cosmos db",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSQLOrDetails",
								"type": "DatasetReference"
							},
							"name": "SourceOrderDetail"
						},
						{
							"dataset": {
								"referenceName": "AzureSQLOrHeader",
								"type": "DatasetReference"
							},
							"name": "SourceOrderHeader"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							},
							"name": "TargetCosmos"
						}
					],
					"transformations": [
						{
							"name": "TypeCast"
						},
						{
							"name": "MakeStruct"
						},
						{
							"name": "JoinIt"
						},
						{
							"name": "ColumnScrubber"
						},
						{
							"name": "ValueScrubber"
						},
						{
							"name": "CreateArrays"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceOrderDetail\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceOrderHeader\nSourceOrderDetail derive(UnitPrice = toDouble(round(UnitPrice,2))) ~> TypeCast\nTypeCast derive(orderdetailsstruct = @(orderqty=OrderQty,\n\t\tunitcost=UnitPrice,\n\t\tsalesorderdetailid=SalesOrderDetailID)) ~> MakeStruct\nSourceOrderHeader, MakeStruct join(SourceOrderHeader@SalesOrderID == SourceOrderDetail@SalesOrderID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinIt\nJoinIt select(mapColumn(\n\t\tSalesOrderID = SourceOrderHeader@SalesOrderID,\n\t\tRevisionNumber,\n\t\tOrderDate,\n\t\tDueDate,\n\t\tShipDate,\n\t\tStatus,\n\t\tOnlineOrderFlag,\n\t\tSalesOrderNumber,\n\t\tPurchaseOrderNumber,\n\t\tAccountNumber,\n\t\tCustomerID,\n\t\tShipToAddressID,\n\t\tBillToAddressID,\n\t\tShipMethod,\n\t\tCreditCardApprovalCode,\n\t\tSubTotal,\n\t\tTaxAmt,\n\t\tFreight,\n\t\tTotalDue,\n\t\tComment,\n\t\trowguid = SourceOrderHeader@rowguid,\n\t\tModifiedDate = SourceOrderHeader@ModifiedDate,\n\t\tSalesOrderID = SourceOrderDetail@SalesOrderID,\n\t\tSalesOrderDetailID,\n\t\tOrderQty,\n\t\tProductID,\n\t\tUnitPrice,\n\t\tUnitPriceDiscount,\n\t\tLineTotal,\n\t\trowguid = SourceOrderDetail@rowguid,\n\t\tModifiedDate = SourceOrderDetail@ModifiedDate,\n\t\torderdetailsstruct\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ColumnScrubber\nColumnScrubber derive(TotalDue = toDouble(round(TotalDue,2))) ~> ValueScrubber\nValueScrubber aggregate(details = collect(orderdetailsstruct),\n\t\teach(match(instr(name,'OrderQty')==0&&instr(name,'UnitPrice')==0&&instr(name,'SalesOrderID')==0), $$ = first($$))) ~> CreateArrays\nCreateArrays sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'document',\n\tpartitionKey: ['/SalesOrderID'],\n\tthroughput: 400,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetCosmos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLOrDetails')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQLOrHeader')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection1')]"
			]
		}
	]
}